

# https://github.com/DoTheEvo/Traefik-v2-examples
version: "3.3"
services:
  picasa_dev:
    build:
      context: .
      dockerfile: Dockerfile_picasa
      args:
        buildno: 1
    image:
      picasa_img
    container_name: picasa_api_dev
    command:
      bash /startup.sh
    env_file:
      - .env
    environment:
      - DOCKER_HOST_IP=${HOST_IP} 
    ports:
      - "${CLIENT_FACE_PORT}:${CLIENT_FACE_PORT}/udp"
      #- "5001:5001/udp"
     # - 5000:5000
     # - 5001:5001
     # - 44444:44444
    volumes:
      - ${DJANGO_FILES_ROOT}:/code
      - ${PHOTO_ROOT}:/photos:ro
      - ${TEST_PHOTOS_FILEPOPULATE}:/test_imgs_filepopulate
      - ${MEDIA_FILES_LOCATION}:/media
      - ${LOG_LOCATION}:/var/log/picasa
    depends_on:
      - db_picasa_dev
    networks:
      - traefik_proxy
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.picasa_dev.rule=Host(`${WEBAPP_DOMAIN}`)"
      - "traefik.http.routers.picasa_dev.tls.certresolver=leresolver"
      - "traefik.http.routers.picasa_dev.entrypoints=websecure"
      - "traefik.http.services.picasa_dev.loadbalancer.server.port=8000"
      - "traefik.http.services.picasa_dev.loadbalancer.healthcheck.hostname=${WEBAPP_DOMAIN}"
      - "traefik.http.middlewares.picasa_dev.redirectscheme.scheme=https"
      - "traefik.http.middlewares.picasa_dev.redirectscheme.permanent=true"


  db_picasa_dev:
    image: postgres:12.1-alpine
    env_file:
      - .env
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
#      PGDATA: /database
    volumes:
      - ${DB_FILES_LOCATION}:/var/lib/postgresql/data
      - ${DJANGO_FILES_ROOT}/dockerize_dev/psql_init.sh:/docker-entrypoint-initdb.d/psql_init.sh
      # Initialization script - see Postgres Docker documentation.
    labels:
      - "user=postgres"
    container_name: db_picasa_dev
    networks:
      - traefik_proxy

  task_redis_dev:
    image: redis:5.0-alpine
    restart: always
    env_file:
      - .env
    networks:
      - traefik_proxy
    container_name: redis_picasa_dev

  apache_fileserve_dev:
    # image: httpd:2.4-alpine
    build:
      context: . 
      dockerfile: Dockerfile_apache
      args:
        buildno: 1
    image:
      httpd_image
    container_name: picasa_media_apache_dev
    env_file:
      - .env
    restart: always
    volumes:
      - ${MEDIA_FILES_LOCATION}:/var/www/media:ro
      - ${STATIC_LOCATION}:/var/www/static:ro
      - ${PHOTO_ROOT}:/var/www/full_res:ro
      - ${DJANGO_FILES_ROOT}/dockerize_dev/apache_config/000-default.config:/etc/apache2/sites-enabled/000-default.conf
      - ${DJANGO_FILES_ROOT}/dockerize_dev/apache_config/vhost.conf:/usr/local/apache2/conf/extra/httpd-vhosts.conf
      - ${DJANGO_FILES_ROOT}/dockerize_dev/apache_config/apache_pwd.pwd:/usr/local/apache2/.htpasswd 
    networks:
      - traefik_proxy
    labels:
#      - "traefik.backend=picasa_media"
#      - "traefik.frontend.rule=Host:${MEDIA_DOMAIN}"
      - "traefik.enable=true"
#      - "traefik.port=80"
#      - "traefik.docker.network=traefik_proxy"
      - "traefik.http.routers.apache_fileserve_dev.rule=Host(`${MEDIA_DOMAIN}`)"
      - "traefik.http.routers.apache_fileserve_dev.tls.certresolver=leresolver"
      - "traefik.http.routers.apache_fileserve_dev.entrypoints=websecure"
      #- "traefik.http.routers.traefik.middlewares=authtraefik"
      #- "traefik.http.middlewares.authtraefik.basicauth.users=admin:$apr1$ly25xhfg$d2eLiOIOnM.IbsZ6Cfb760" # admin/movie based one


networks:
  default: 
    driver: bridge
  traefik_proxy:
    external: true
  #traefik_default:
  #  external: true
#       name: traefik_default
