TODOS:


-Extract existing tags (non-face) from image and add them in filepopulator
-Method for adding a tag to an image via API
-Delete methods for face and person that delete it off the media files as well.
-Test that when picture deleted, so are faces (cascading?)
-Disable posting to many fields in the API
-I'd like a status API -- how many images processed, how many faces, etc...
-Map from image to all faces in image. 
-Check if moving the photo means that we have to re-process faces -- and that faces remain linked!
-- Also see if deleting the picture will cascade and delete the faces. I don't think I have this set up yet. 
-Set up text alerts for the project
-settings.LOGGER.error("Need better handling on foreign_key") -- This was in the face_manager task. Not sure what I meant.

## -The face clip from the image needs to be rotated appropriately. See /photos/Pictures_In_Progress/2019/Baltimore Trip/DSC_1209.JPG
## -- Sub-- face clip--: The bounding rectangle must be adjusted appropriately. 
## -Automate a highlight image when first person is first detected
## -Downsize the face thumbnail resolution
## -A locking mechanism for adding faces (same as with filepopulator -- only one thread running)
## -A cleanup script for faces/people when I want to reset that -- done. python manage.py clearfaces